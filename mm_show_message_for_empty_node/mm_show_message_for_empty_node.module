<?php
/**
 * @file
 */
 
/**
  *  Implements hook_node_view().
 */
function mm_show_message_for_empty_node_node_view($node, $view_mode, $langcode) {
  // To increase performance (and work around Panels) we setup a way to prevent
  // processing nodes more than once using drupal_static.
  $nodes = &drupal_static(__function__, array());
  
  // This variable stores whether or not to display the empty node warning.
  $node_is_empty = FALSE;
  
  // Use the stored value if the node has already been processed.
  if (!empty($node->nid) && isset($nodes[$node->nid])) {
    $node_is_empty = $nodes[$node->nid];
  }
  else {
    // If we haven't processed the node already, then check for empty nodes
    // and whether or not this user has permission to do anything about it.
    $empty_title = empty($node->content['title']) && empty($node->title);
    $empty_content = empty($node->content['body']) && empty($node->body);
    
    if ($empty_title && $empty_content) {
      global $user;
      // Recycling bin nodes and other fake node-like things may enter this function
      // without a nid (nid = NULL), which precludes us from checking
      // mm_content_user_can_node(), so assume FALSE for those cases and move on
      // to other user_access/admin checks.
      $mm_content_user_can_node = (empty($node->nid)) ? FALSE : mm_content_user_can_node($node, MM_PERMS_APPLY);
      // Check if the user can edit the node.
      $is_admin = in_array('administrator', $user->roles);
      $has_admin_perms = user_access('bypass node access') || user_access('administer all menus');
      if ($mm_content_user_can_node || $is_admin || $has_admin_perms) {
        // If the node is empty AND the user has access to edit the node,
        // flag this node for our warning message:
        $node_is_empty = TRUE;
      }
    }
    $nodes[$node->nid] = $node_is_empty;
  }
  
  if ($node_is_empty) {
    // Create an anchor tag (link) to the edit page and create/set the warning
    // message using drupal's own warning/message classes for styling.
    $dest = l('Add content or show the title', 'node/'. $node->nid .'/edit/');
    $node->content['body'][0]['#markup'] = '
      <div class="warning messages">
        <p>
          This node contains neither a title nor a body and is invisible to visitors. <br />
          ' . $dest . '
        </p>
      </div>';
  }
}